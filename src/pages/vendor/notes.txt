<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ProgrammingError
          at /auth/vendors-registration/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; background-color:#fff; color:#000; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; word-break: break-word; }
    summary { cursor: pointer; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 10px 2px 40px; width: auto; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.cause { word-break: break-word; }
    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands, summary.commands { margin-left: 40px; }
    div.commands a, summary.commands { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em; font-weight:normal; }
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
    .fname { user-select: all; }
  </style>
  
  <script>
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(document.querySelectorAll('ol.pre-context'));
      hideAll(document.querySelectorAll('ol.post-context'));
      hideAll(document.querySelectorAll('div.pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.textContent = link.textContent.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ProgrammingError
       at /auth/vendors-registration/</h1>
  <pre class="exception_value">relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...
                             ^
</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>POST</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://127.0.0.1:8000/auth/vendors-registration/</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>4.2.8</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ProgrammingError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...
                             ^
</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td><span class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</span>, line 89, in _execute</td>
    </tr>


    <tr>
      <th>Raised during:</th>
      <td>dealzup_auth.views.VendorRegistrationListCreateView</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Scripts\python.exe</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.12.0</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\dealzup-api&#x27;,
 &#x27;C:\\Python312\\python312.zip&#x27;,
 &#x27;C:\\Python312\\DLLs&#x27;,
 &#x27;C:\\Python312\\Lib&#x27;,
 &#x27;C:\\Python312&#x27;,
 &#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\env&#x27;,
 &#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\env\\Lib\\site-packages&#x27;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 14 Dec 2024 15:06:48 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 89, in _execute
          

          
            <div class="context" id="c2452436738688">
              
                <ol start="82" class="pre-context" id="pre2452436738688">
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="89" class="context-line">
                <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                return self.cursor.execute(sql, params)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='90' class="post-context" id="post2452436738688">
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436738688">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
          <li class="cause"><h3>
          
            The above exception (relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...
                             ^
) was the direct cause of the following exception:
          
        </h3></li>
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\core\handlers\exception.py</code>, line 55, in inner
          

          
            <div class="context" id="c2452436736448">
              
                <ol start="48" class="pre-context" id="pre2452436736448">
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>        return inner</pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>    else:</pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>        @wraps(get_response)</pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>        def inner(request):</pre></li>
                
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="55" class="context-line">
                <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>                response = get_response(request)
                               ^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='56' class="post-context" id="post2452436736448">
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>            except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>                response = response_for_exception(request, exc)</pre></li>
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>            return response</pre></li>
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre>        return inner</pre></li>
                  
                  <li onclick="toggle('pre2452436736448', 'post2452436736448')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436736448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;dealzup_auth_vendorregistration&quot; does not exist\nLINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...\n                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>get_response</td>
                    <td class="code"><pre>&lt;bound method BaseHandler._get_response of &lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000023B7E72C2F0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\core\handlers\base.py</code>, line 197, in _get_response
          

          
            <div class="context" id="c2452436742784">
              
                <ol start="190" class="pre-context" id="pre2452436742784">
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>        if response is None:</pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>            wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>            # If it is an asynchronous view, run it in a subthread.</pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>            if iscoroutinefunction(wrapped_callback):</pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>                wrapped_callback = async_to_sync(wrapped_callback)</pre></li>
                
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="197" class="context-line">
                <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>                response = wrapped_callback(request, *callback_args, **callback_kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='198' class="post-context" id="post2452436742784">
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>            except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>                response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>                if response is None:</pre></li>
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>                    raise</pre></li>
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436742784', 'post2452436742784')"><pre>        # Complain if the view returned None (a common error).</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436742784">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000023B00148680&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;CsrfViewMiddleware get_response=convert_exception_to_response.&lt;locals&gt;.inner&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x0000023B7E72C2F0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000023B00148680&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\views\decorators\csrf.py</code>, line 56, in wrapper_view
          

          
            <div class="context" id="c2452436744576">
              
                <ol start="49" class="pre-context" id="pre2452436744576">
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>def csrf_exempt(view_func):</pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    &quot;&quot;&quot;Mark a view function as being exempt from the CSRF view protection.&quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    # view_func.csrf_exempt = True would also work, but decorators are nicer</pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    # if they don&#x27;t have side effects, so return a new function.</pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    @wraps(view_func)</pre></li>
                
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    def wrapper_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="56" class="context-line">
                <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>        return view_func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='57' class="post-context" id="post2452436744576">
                  
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    wrapper_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre2452436744576', 'post2452436744576')"><pre>    return wrapper_view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436744576">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: POST &#x27;/auth/vendors-registration/&#x27;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function View.as_view.&lt;locals&gt;.view at 0x0000023B001485E0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\views\generic\base.py</code>, line 104, in view
          

          
            <div class="context" id="c2452456004928">
              
                <ol start="97" class="pre-context" id="pre2452456004928">
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>            self.setup(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>            if not hasattr(self, &quot;request&quot;):</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>                raise AttributeError(</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>                    &quot;%s instance has no &#x27;request&#x27; attribute. Did you override &quot;</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>                    &quot;setup() and forget to call super()?&quot; % cls.__name__</pre></li>
                
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>                )</pre></li>
                
                </ol>
              
              <ol start="104" class="context-line">
                <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>            return self.dispatch(request, *args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='105' class="post-context" id="post2452456004928">
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>        # __name__ and __qualname__ are intentionally left unchanged as</pre></li>
                  
                  <li onclick="toggle('pre2452456004928', 'post2452456004928')"><pre>        # view_class should be used to robustly determine the name of the view</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452456004928">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#x27;dealzup_auth.views.VendorRegistrationListCreateView&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py</code>, line 509, in dispatch
          

          
            <div class="context" id="c2452436739648">
              
                <ol start="502" class="pre-context" id="pre2452436739648">
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="509" class="context-line">
                <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>            response = self.handle_exception(exc)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='510' class="post-context" id="post2452436739648">
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre2452436739648', 'post2452436739648')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436739648">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method ListCreateAPIView.post of &lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py</code>, line 469, in handle_exception
          

          
            <div class="context" id="c2452436741696">
              
                <ol start="462" class="pre-context" id="pre2452436741696">
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        exception_handler = self.get_exception_handler()</pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        context = self.get_exception_handler_context()</pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        response = exception_handler(exc, context)</pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        if response is None:</pre></li>
                
                </ol>
              
              <ol start="469" class="context-line">
                <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>            self.raise_uncaught_exception(exc)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='470' class="post-context" id="post2452436741696">
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        response.exception = True</pre></li>
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        return response</pre></li>
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                  
                  <li onclick="toggle('pre2452436741696', 'post2452436741696')"><pre>        if settings.DEBUG:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436741696">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;args&#x27;: (),
 &#x27;kwargs&#x27;: {},
 &#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;,
 &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;dealzup_auth_vendorregistration&quot; does not exist\nLINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...\n                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exception_handler</td>
                    <td class="code"><pre>&lt;function custom_exception_handler at 0x0000023B007927A0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py</code>, line 480, in raise_uncaught_exception
          

          
            <div class="context" id="c2452436737536">
              
                <ol start="473" class="pre-context" id="pre2452436737536">
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>    def raise_uncaught_exception(self, exc):</pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>        if settings.DEBUG:</pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>            request = self.request</pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>            renderer_format = getattr(request.accepted_renderer, &#x27;format&#x27;)</pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>            use_plaintext_traceback = renderer_format not in (&#x27;html&#x27;, &#x27;api&#x27;, &#x27;admin&#x27;)</pre></li>
                
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>            request.force_plaintext_errors(use_plaintext_traceback)</pre></li>
                
                </ol>
              
              <ol start="480" class="context-line">
                <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>        raise exc
             ^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='481' class="post-context" id="post2452436737536">
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>    # Note: Views are made CSRF exempt from within `as_view` as to prevent</pre></li>
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>    # accidental removal of this exemption in cases where `dispatch` needs to</pre></li>
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>    # be overridden.</pre></li>
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>    def dispatch(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre2452436737536', 'post2452436737536')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436737536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;dealzup_auth_vendorregistration&quot; does not exist\nLINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...\n                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>renderer_format</td>
                    <td class="code"><pre>&#x27;json&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>use_plaintext_traceback</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py</code>, line 506, in dispatch
          

          
            <div class="context" id="c2452436741312">
              
                <ol start="499" class="pre-context" id="pre2452436741312">
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre></pre></li>
                
                </ol>
              
              <ol start="506" class="context-line">
                <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>            response = handler(request, *args, **kwargs)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='507' class="post-context" id="post2452436741312">
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre2452436741312', 'post2452436741312')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436741312">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method ListCreateAPIView.post of &lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\generics.py</code>, line 242, in post
          

          
            <div class="context" id="c2452437384768">
              
                <ol start="235" class="pre-context" id="pre2452437384768">
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    Concrete view for listing a queryset or creating a model instance.</pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    def get(self, request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>        return self.list(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    def post(self, request, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="242" class="context-line">
                <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>        return self.create(request, *args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='243' class="post-context" id="post2452437384768">
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>class RetrieveUpdateAPIView(mixins.RetrieveModelMixin,</pre></li>
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>                            mixins.UpdateModelMixin,</pre></li>
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>                            GenericAPIView):</pre></li>
                  
                  <li onclick="toggle('pre2452437384768', 'post2452437384768')"><pre>    &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452437384768">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\mixins.py</code>, line 18, in create
          

          
            <div class="context" id="c2452436739456">
              
                <ol start="11" class="pre-context" id="pre2452436739456">
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>class CreateModelMixin:</pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>    Create a model instance.</pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>    def create(self, request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        serializer = self.get_serializer(data=request.data)</pre></li>
                
                </ol>
              
              <ol start="18" class="context-line">
                <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        serializer.is_valid(raise_exception=True)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='19' class="post-context" id="post2452436739456">
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        self.perform_create(serializer)</pre></li>
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        headers = self.get_success_headers(serializer.data)</pre></li>
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)</pre></li>
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>    def perform_create(self, serializer):</pre></li>
                  
                  <li onclick="toggle('pre2452436739456', 'post2452436739456')"><pre>        serializer.save()</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436739456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;dealzup_auth.views.VendorRegistrationListCreateView object at 0x0000023B009DE000&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py</code>, line 227, in is_valid
          

          
            <div class="context" id="c2452436731584">
              
                <ol start="220" class="pre-context" id="pre2452436731584">
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>        assert hasattr(self, &#x27;initial_data&#x27;), (</pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>            &#x27;Cannot call `.is_valid()` as no `data=` keyword argument was &#x27;</pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>            &#x27;passed when instantiating the serializer instance.&#x27;</pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>        if not hasattr(self, &#x27;_validated_data&#x27;):</pre></li>
                
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="227" class="context-line">
                <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>                self._validated_data = self.run_validation(self.initial_data)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='228' class="post-context" id="post2452436731584">
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>            except ValidationError as exc:</pre></li>
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>                self._validated_data = {}</pre></li>
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>                self._errors = exc.detail</pre></li>
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre>                self._errors = {}</pre></li>
                  
                  <li onclick="toggle('pre2452436731584', 'post2452436731584')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436731584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>raise_exception</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py</code>, line 428, in run_validation
          

          
            <div class="context" id="c2452436734208">
              
                <ol start="421" class="pre-context" id="pre2452436734208">
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        (is_empty_value, data) = self.validate_empty_values(data)</pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        if is_empty_value:</pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>            return data</pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        value = self.to_internal_value(data)</pre></li>
                
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="428" class="context-line">
                <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>            self.run_validators(value)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='429' class="post-context" id="post2452436734208">
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>            value = self.validate(value)</pre></li>
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>            assert value is not None, &#x27;.validate() should return the validated data&#x27;</pre></li>
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        except (ValidationError, DjangoValidationError) as exc:</pre></li>
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>            raise ValidationError(detail=as_serializer_error(exc))</pre></li>
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436734208', 'post2452436734208')"><pre>        return value</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436734208">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>{&#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;,
 &#x27;apartment&#x27;: &#x27;22&#x27;,
 &#x27;city&#x27;: &#x27;Kitchener&#x27;,
 &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;,
 &#x27;country&#x27;: &#x27;India&#x27;,
 &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;,
 &#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;,
 &#x27;password&#x27;: &#x27;Smit@2234&#x27;,
 &#x27;phone&#x27;: &#x27;9930630872&#x27;,
 &#x27;pin&#x27;: &#x27;410206&#x27;,
 &#x27;postalcode&#x27;: &#x27;410206&#x27;,
 &#x27;province&#x27;: &#x27;Ontario&#x27;,
 &#x27;state&#x27;: &#x27;Maharastra&#x27;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>is_empty_value</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>OrderedDict([(&#x27;full_name&#x27;, &#x27;Smit Chavan&#x27;),
             (&#x27;phone&#x27;, &#x27;9930630872&#x27;),
             (&#x27;email&#x27;, &#x27;smitchavan42@gmail.com&#x27;),
             (&#x27;address&#x27;, &#x27;003,line Ali shriya vaibhav building&#x27;),
             (&#x27;city&#x27;, &#x27;Kitchener&#x27;),
             (&#x27;state&#x27;, &#x27;Maharastra&#x27;),
             (&#x27;country&#x27;, &#x27;India&#x27;),
             (&#x27;pin&#x27;, &#x27;410206&#x27;)])</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py</code>, line 461, in run_validators
          

          
            <div class="context" id="c2452436745536">
              
                <ol start="454" class="pre-context" id="pre2452436745536">
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        Add read_only fields with defaults to value before running validators.</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        if isinstance(value, dict):</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>            to_validate = self._read_only_defaults()</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>            to_validate.update(value)</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>            to_validate = value</pre></li>
                
                </ol>
              
              <ol start="461" class="context-line">
                <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        super().run_validators(to_validate)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='462' class="post-context" id="post2452436745536">
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>    def to_internal_value(self, data):</pre></li>
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        Dict of native values &lt;- Dict of primitive datatypes.</pre></li>
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre2452436745536', 'post2452436745536')"><pre>        if not isinstance(data, Mapping):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436745536">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;rest_framework.serializers.Serializer&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>to_validate</td>
                    <td class="code"><pre>OrderedDict([(&#x27;full_name&#x27;, &#x27;Smit Chavan&#x27;),
             (&#x27;phone&#x27;, &#x27;9930630872&#x27;),
             (&#x27;email&#x27;, &#x27;smitchavan42@gmail.com&#x27;),
             (&#x27;address&#x27;, &#x27;003,line Ali shriya vaibhav building&#x27;),
             (&#x27;city&#x27;, &#x27;Kitchener&#x27;),
             (&#x27;state&#x27;, &#x27;Maharastra&#x27;),
             (&#x27;country&#x27;, &#x27;India&#x27;),
             (&#x27;pin&#x27;, &#x27;410206&#x27;)])</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>OrderedDict([(&#x27;full_name&#x27;, &#x27;Smit Chavan&#x27;),
             (&#x27;phone&#x27;, &#x27;9930630872&#x27;),
             (&#x27;email&#x27;, &#x27;smitchavan42@gmail.com&#x27;),
             (&#x27;address&#x27;, &#x27;003,line Ali shriya vaibhav building&#x27;),
             (&#x27;city&#x27;, &#x27;Kitchener&#x27;),
             (&#x27;state&#x27;, &#x27;Maharastra&#x27;),
             (&#x27;country&#x27;, &#x27;India&#x27;),
             (&#x27;pin&#x27;, &#x27;410206&#x27;)])</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\fields.py</code>, line 560, in run_validators
          

          
            <div class="context" id="c2452436737728">
              
                <ol start="553" class="pre-context" id="pre2452436737728">
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>        Test the given value against all the validators on the field,</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>        and either raise a `ValidationError` or simply return.</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>        errors = []</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>        for validator in self.validators:</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>            try:</pre></li>
                
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                if getattr(validator, &#x27;requires_context&#x27;, False):</pre></li>
                
                </ol>
              
              <ol start="560" class="context-line">
                <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                    validator(value, self)
                         ^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='561' class="post-context" id="post2452436737728">
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                else:</pre></li>
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                    validator(value)</pre></li>
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>            except ValidationError as exc:</pre></li>
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                # If the validation error contains a mapping of fields to</pre></li>
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                # errors then simply raise it immediately rather than</pre></li>
                  
                  <li onclick="toggle('pre2452436737728', 'post2452436737728')"><pre>                # attempting to accumulate a list of errors.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436737728">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>errors</td>
                    <td class="code"><pre>[]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>validator</td>
                    <td class="code"><pre>&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>value</td>
                    <td class="code"><pre>OrderedDict([(&#x27;full_name&#x27;, &#x27;Smit Chavan&#x27;),
             (&#x27;phone&#x27;, &#x27;9930630872&#x27;),
             (&#x27;email&#x27;, &#x27;smitchavan42@gmail.com&#x27;),
             (&#x27;address&#x27;, &#x27;003,line Ali shriya vaibhav building&#x27;),
             (&#x27;city&#x27;, &#x27;Kitchener&#x27;),
             (&#x27;state&#x27;, &#x27;Maharastra&#x27;),
             (&#x27;country&#x27;, &#x27;India&#x27;),
             (&#x27;pin&#x27;, &#x27;410206&#x27;)])</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\validators.py</code>, line 157, in __call__
          

          
            <div class="context" id="c2452436741952">
              
                <ol start="150" class="pre-context" id="pre2452436741952">
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        queryset = self.filter_queryset(attrs, queryset, serializer)</pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        queryset = self.exclude_current_instance(attrs, queryset, serializer.instance)</pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        # Ignore validation if any field is None</pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        checked_values = [</pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>            value for field, value in attrs.items() if field in self.fields</pre></li>
                
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        ]</pre></li>
                
                </ol>
              
              <ol start="157" class="context-line">
                <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        if None not in checked_values and qs_exists(queryset):
                                               ^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='158' class="post-context" id="post2452436741952">
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>            field_names = &#x27;, &#x27;.join(self.fields)</pre></li>
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>            message = self.message.format(field_names=field_names)</pre></li>
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>            raise ValidationError(message, code=&#x27;unique&#x27;)</pre></li>
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>    def __repr__(self):</pre></li>
                  
                  <li onclick="toggle('pre2452436741952', 'post2452436741952')"><pre>        return &#x27;&lt;%s(queryset=%s, fields=%s)&gt;&#x27; % (</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436741952">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>attrs</td>
                    <td class="code"><pre>OrderedDict([(&#x27;full_name&#x27;, &#x27;Smit Chavan&#x27;),
             (&#x27;phone&#x27;, &#x27;9930630872&#x27;),
             (&#x27;email&#x27;, &#x27;smitchavan42@gmail.com&#x27;),
             (&#x27;address&#x27;, &#x27;003,line Ali shriya vaibhav building&#x27;),
             (&#x27;city&#x27;, &#x27;Kitchener&#x27;),
             (&#x27;state&#x27;, &#x27;Maharastra&#x27;),
             (&#x27;country&#x27;, &#x27;India&#x27;),
             (&#x27;pin&#x27;, &#x27;410206&#x27;)])</pre></td>
                  </tr>
                
                  <tr>
                    <td>checked_values</td>
                    <td class="code"><pre>[&#x27;9930630872&#x27;, &#x27;smitchavan42@gmail.com&#x27;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>queryset</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: ..., &quot;dealzup_auth_vendorregistration&quot;.&quot;vendor&quot; FROM &quot;dealzup_a...
                                                             ^
</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>VendorRegistrationSerializer(context={&#x27;request&#x27;: &lt;rest_framework.request.Request: POST &#x27;/auth/vendors-registration/&#x27;&gt;, &#x27;format&#x27;: None, &#x27;view&#x27;: &lt;dealzup_auth.views.VendorRegistrationListCreateView object&gt;}, data={&#x27;full_name&#x27;: &#x27;Smit Chavan&#x27;, &#x27;email&#x27;: &#x27;smitchavan42@gmail.com&#x27;, &#x27;phone&#x27;: &#x27;9930630872&#x27;, &#x27;state&#x27;: &#x27;Maharastra&#x27;, &#x27;pin&#x27;: &#x27;410206&#x27;, &#x27;country&#x27;: &#x27;India&#x27;, &#x27;city&#x27;: &#x27;Kitchener&#x27;, &#x27;password&#x27;: &#x27;Smit@2234&#x27;, &#x27;confirmpassword&#x27;: &#x27;Smit@2341&#x27;, &#x27;postalcode&#x27;: &#x27;410206&#x27;, &#x27;apartment&#x27;: &#x27;22&#x27;, &#x27;address&#x27;: &#x27;003,line Ali shriya vaibhav building&#x27;, &#x27;province&#x27;: &#x27;Ontario&#x27;}):
    id = IntegerField(label=&#x27;ID&#x27;, read_only=True)
    full_name = CharField(max_length=256)
    phone = CharField(max_length=15, required=True)
    email = EmailField(max_length=254, required=True)
    address = CharField(style={&#x27;base_template&#x27;: &#x27;textarea.html&#x27;})
    city = CharField(max_length=256)
    state = CharField(max_length=256)
    country = CharField(max_length=256)
    pin = CharField(max_length=6)
    vendor = BooleanField(required=False)
    class Meta:
        validators = [&lt;UniqueTogetherValidator(queryset=VendorRegistration.objects.all(), fields=(&#x27;phone&#x27;, &#x27;email&#x27;))&gt;]</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame user">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\validators.py</code>, line 21, in qs_exists
          

          
            <div class="context" id="c2452436738432">
              
                <ol start="14" class="pre-context" id="pre2452436738432">
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre># Robust filter and exist implementations. Ensures that queryset.exists() for</pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre># an invalid value returns `False`, rather than raising an error.</pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre># Refs https://github.com/encode/django-rest-framework/issues/3381</pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>def qs_exists(queryset):</pre></li>
                
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>    try:</pre></li>
                
                </ol>
              
              <ol start="21" class="context-line">
                <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>        return queryset.exists()
                   ^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='22' class="post-context" id="post2452436738432">
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>    except (TypeError, ValueError, DataError):</pre></li>
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>        return False</pre></li>
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>def qs_filter(queryset, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre2452436738432', 'post2452436738432')"><pre>    try:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436738432">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>queryset</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: ..., &quot;dealzup_auth_vendorregistration&quot;.&quot;vendor&quot; FROM &quot;dealzup_a...
                                                             ^
</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\query.py</code>, line 1241, in exists
          

          
            <div class="context" id="c2452436730176">
              
                <ol start="1234" class="pre-context" id="pre2452436730176">
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>    _update.queryset_only = False</pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>    def exists(self):</pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        Return True if the QuerySet would have any results, False otherwise.</pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        if self._result_cache is None:</pre></li>
                
                </ol>
              
              <ol start="1241" class="context-line">
                <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>            return self.query.has_results(using=self.db)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1242' class="post-context" id="post2452436730176">
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        return bool(self._result_cache)</pre></li>
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>    async def aexists(self):</pre></li>
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>        return await sync_to_async(self.exists)()</pre></li>
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436730176', 'post2452436730176')"><pre>    def contains(self, obj):</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436730176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>Error in formatting: ProgrammingError: relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: ..., &quot;dealzup_auth_vendorregistration&quot;.&quot;vendor&quot; FROM &quot;dealzup_a...
                                                             ^
</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\query.py</code>, line 598, in has_results
          

          
            <div class="context" id="c2452436744384">
              
                <ol start="591" class="pre-context" id="pre2452436744384">
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>            q.set_limits(high=1)</pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        q.add_annotation(Value(1), &quot;a&quot;)</pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        return q</pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>    def has_results(self, using):</pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        q = self.exists(using)</pre></li>
                
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        compiler = q.get_compiler(using=using)</pre></li>
                
                </ol>
              
              <ol start="598" class="context-line">
                <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        return compiler.has_results()
                    ^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='599' class="post-context" id="post2452436744384">
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>    def explain(self, using, format=None, **options):</pre></li>
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        q = self.clone()</pre></li>
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>        for option_name in options:</pre></li>
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>            if (</pre></li>
                  
                  <li onclick="toggle('pre2452436744384', 'post2452436744384')"><pre>                not EXPLAIN_OPTIONS_PATTERN.fullmatch(option_name)</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436744384">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>compiler</td>
                    <td class="code"><pre>&lt;SQLCompiler model=VendorRegistration connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>q</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x0000023B007E6780&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.query.Query object at 0x0000023B007E5DF0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#x27;default&#x27;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\compiler.py</code>, line 1530, in has_results
          

          
            <div class="context" id="c2452436739840">
              
                <ol start="1523" class="pre-context" id="pre2452436739840">
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        return rows</pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>    def has_results(self):</pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        Backends (e.g. NoSQL) can override this in order to use optimized</pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        versions of &quot;query has any results.&quot;</pre></li>
                
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        &quot;&quot;&quot;</pre></li>
                
                </ol>
              
              <ol start="1530" class="context-line">
                <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        return bool(self.execute_sql(SINGLE))
                          ^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1531' class="post-context" id="post2452436739840">
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>    def execute_sql(</pre></li>
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        self, result_type=MULTI, chunked_fetch=False, chunk_size=GET_ITERATOR_CHUNK_SIZE</pre></li>
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>    ):</pre></li>
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre2452436739840', 'post2452436739840')"><pre>        Run the query against the database and return the result(s). The</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436739840">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLCompiler model=VendorRegistration connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\compiler.py</code>, line 1562, in execute_sql
          

          
            <div class="context" id="c2452436733120">
              
                <ol start="1555" class="pre-context" id="pre2452436733120">
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>                return</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>        if chunked_fetch:</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            cursor = self.connection.chunked_cursor()</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>        else:</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            cursor = self.connection.cursor()</pre></li>
                
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>        try:</pre></li>
                
                </ol>
              
              <ol start="1562" class="context-line">
                <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            cursor.execute(sql, params)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='1563' class="post-context" id="post2452436733120">
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>        except Exception:</pre></li>
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            # Might fail for server-side cursors (e.g. connection closed)</pre></li>
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            cursor.close()</pre></li>
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>            raise</pre></li>
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436733120', 'post2452436733120')"><pre>        if result_type == CURSOR:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436733120">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>chunk_size</td>
                    <td class="code"><pre>100</pre></td>
                  </tr>
                
                  <tr>
                    <td>chunked_fetch</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#x27;single&#x27;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;SQLCompiler model=VendorRegistration connection=&lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt; using=&#x27;default&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 102, in execute
          

          
            <div class="context" id="c2452436731520">
              
                <ol start="95" class="pre-context" id="pre2452436731520">
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>    # XXX callproc isn&#x27;t instrumented at this time.</pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>        with self.debug_sql(sql, params, use_last_executed_query=True):</pre></li>
                
                </ol>
              
              <ol start="102" class="context-line">
                <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>            return super().execute(sql, params)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='103' class="post-context" id="post2452436731520">
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>        with self.debug_sql(sql, param_list, many=True):</pre></li>
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>            return super().executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436731520', 'post2452436731520')"><pre>    @contextmanager</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436731520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>__class__</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.backends.utils.CursorDebugWrapper&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 67, in execute
          

          
            <div class="context" id="c2452436735552">
              
                <ol start="60" class="pre-context" id="pre2452436735552">
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>            elif kparams is None:</pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>                return self.cursor.callproc(procname, params)</pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>                params = params or ()</pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>                return self.cursor.callproc(procname, params, kparams)</pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>    def execute(self, sql, params=None):</pre></li>
                
                </ol>
              
              <ol start="67" class="context-line">
                <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>        return self._execute_with_wrappers(
                   </pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='68' class="post-context" id="post2452436735552">
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>            sql, params, many=False, executor=self._execute</pre></li>
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>    def executemany(self, sql, param_list):</pre></li>
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>        return self._execute_with_wrappers(</pre></li>
                  
                  <li onclick="toggle('pre2452436735552', 'post2452436735552')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436735552">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 80, in _execute_with_wrappers
          

          
            <div class="context" id="c2452436736640">
              
                <ol start="73" class="pre-context" id="pre2452436736640">
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>            sql, param_list, many=True, executor=self._executemany</pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>    def _execute_with_wrappers(self, sql, params, many, executor):</pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        context = {&quot;connection&quot;: self.db, &quot;cursor&quot;: self}</pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                </ol>
              
              <ol start="80" class="context-line">
                <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        return executor(sql, params, many, context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='81' class="post-context" id="post2452436736640">
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre2452436736640', 'post2452436736640')"><pre>                # params default might be backend specific.</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436736640">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>context</td>
                    <td class="code"><pre>{&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
 &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>executor</td>
                    <td class="code"><pre>&lt;bound method CursorWrapper._execute of &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>many</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 84, in _execute
          

          
            <div class="context" id="c2452436746176">
              
                <ol start="77" class="pre-context" id="pre2452436746176">
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>        context = {&quot;connection&quot;: self.db, &quot;cursor&quot;: self}</pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>        for wrapper in reversed(self.db.execute_wrappers):</pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>            executor = functools.partial(wrapper, executor)</pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>        return executor(sql, params, many, context)</pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre></pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                </ol>
              
              <ol start="84" class="context-line">
                <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>        with self.db.wrap_database_errors:
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='85' class="post-context" id="post2452436746176">
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>            if params is None:</pre></li>
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>                # params default might be backend specific.</pre></li>
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>                return self.cursor.execute(sql)</pre></li>
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre>                return self.cursor.execute(sql, params)</pre></li>
                  
                  <li onclick="toggle('pre2452436746176', 'post2452436746176')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436746176">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\utils.py</code>, line 91, in __exit__
          

          
            <div class="context" id="c2452436730880">
              
                <ol start="84" class="pre-context" id="pre2452436730880">
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>            db_exc_type = getattr(self.wrapper.Database, dj_exc_type.__name__)</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                # Only set the &#x27;errors_occurred&#x27; flag for errors that may make</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                # the connection unusable.</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li>
                
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                    self.wrapper.errors_occurred = True</pre></li>
                
                </ol>
              
              <ol start="91" class="context-line">
                <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>                raise dj_exc_value.with_traceback(traceback) from exc_value
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='92' class="post-context" id="post2452436730880">
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>    def __call__(self, func):</pre></li>
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li>
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>        # reasons. Refs #21109.</pre></li>
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>        def inner(*args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre2452436730880', 'post2452436730880')"><pre>            with self:</pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436730880">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;django.db.utils.ProgrammingError&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>ProgrammingError(&#x27;relation &quot;dealzup_auth_vendorregistration&quot; does not exist\nLINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...\n                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#x27;psycopg2.errors.UndefinedTable&#x27;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>UndefinedTable(&#x27;relation &quot;dealzup_auth_vendorregistration&quot; does not exist\nLINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...\n                             ^\n&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0x0000023B00AE0A40&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0x0000023B009EE280&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
        
        <li class="frame django">
          
            <code class="fname">C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py</code>, line 89, in _execute
          

          
            <div class="context" id="c2452436738688">
              
                <ol start="82" class="pre-context" id="pre2452436738688">
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>    def _execute(self, sql, params, *ignored_wrapper_args):</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        with self.db.wrap_database_errors:</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            if params is None:</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                # params default might be backend specific.</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                return self.cursor.execute(sql)</pre></li>
                
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            else:</pre></li>
                
                </ol>
              
              <ol start="89" class="context-line">
                <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>                return self.cursor.execute(sql, params)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre> <span>â€¦</span></li>
              </ol>
              
                <ol start='90' class="post-context" id="post2452436738688">
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre></pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>    def _executemany(self, sql, param_list, *ignored_wrapper_args):</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        self.db.validate_no_broken_transaction()</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>        with self.db.wrap_database_errors:</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li>
                  
                  <li onclick="toggle('pre2452436738688', 'post2452436738688')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            
              <details>
                <summary class="commands">Local vars</summary>
            
            <table class="vars" id="v2452436738688">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>ignored_wrapper_args</td>
                    <td class="code"><pre>(False,
 {&#x27;connection&#x27;: &lt;DatabaseWrapper vendor=&#x27;postgresql&#x27; alias=&#x27;default&#x27;&gt;,
  &#x27;cursor&#x27;: &lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;})</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(1, &#x27;smitchavan42@gmail.com&#x27;, &#x27;9930630872&#x27;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.postgresql.base.CursorDebugWrapper object at 0x0000023B00A57320&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>(&#x27;SELECT %s AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE &#x27;
 &#x27;(&quot;dealzup_auth_vendorregistration&quot;.&quot;email&quot; = %s AND &#x27;
 &#x27;&quot;dealzup_auth_vendorregistration&quot;.&quot;phone&quot; = %s) LIMIT 1&#x27;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
            </details>
          
        </li>
      
    </ul>
  </div>

  <form action="https://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ProgrammingError at /auth/vendors-registration/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: POST
Request URL: http://127.0.0.1:8000/auth/vendors-registration/

Django Version: 4.2.8
Python Version: 3.12.0
Installed Applications:
[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;django_extensions&#x27;,
 &#x27;base.apps.BaseConfig&#x27;,
 &#x27;dealzup_auth.apps.DealzupAuthConfig&#x27;,
 &#x27;deals.apps.DealsConfig&#x27;,
 &#x27;wallet.apps.WalletConfig&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt.token_blacklist&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;import_export&#x27;]
Installed Middleware:
[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;]



Traceback (most recent call last):
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The above exception (relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...
                             ^
) was the direct cause of the following exception:
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
    ^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\generics.py", line 242, in post
    return self.create(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\mixins.py", line 18, in create
    serializer.is_valid(raise_exception=True)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py", line 227, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py", line 428, in run_validation
    self.run_validators(value)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\serializers.py", line 461, in run_validators
    super().run_validators(to_validate)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\fields.py", line 560, in run_validators
    validator(value, self)
    ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\validators.py", line 157, in __call__
    if None not in checked_values and qs_exists(queryset):
                                      ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\rest_framework\validators.py", line 21, in qs_exists
    return queryset.exists()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\query.py", line 1241, in exists
    return self.query.has_results(using=self.db)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\query.py", line 598, in has_results
    return compiler.has_results()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\compiler.py", line 1530, in has_results
    return bool(self.execute_sql(SINGLE))
                ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
           
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Smit\Desktop\Projects\DealzUp\Backend\env\Lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Exception Type: ProgrammingError at /auth/vendors-registration/
Exception Value: relation &quot;dealzup_auth_vendorregistration&quot; does not exist
LINE 1: SELECT 1 AS &quot;a&quot; FROM &quot;dealzup_auth_vendorregistration&quot; WHERE...
                             ^

</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>

</div>


<div id="requestinfo">
  <h2>Request information</h2>


  
    <h3 id="user-info">USER</h3>
    <p>AnonymousUser</p>
  

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  

  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  

  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ALLUSERSPROFILE</td>
          <td class="code"><pre>&#x27;C:\\ProgramData&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ANDROID_HOME</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ANDROID_SDK_ROOT</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>APPDATA</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Roaming&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOCOLATEYINSTALL</td>
          <td class="code"><pre>&#x27;C:\\ProgramData\\chocolatey&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHOCOLATEYLASTPATHUPDATE</td>
          <td class="code"><pre>&#x27;133531828029685293&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CHROME_CRASHPAD_PIPE_NAME</td>
          <td class="code"><pre>&#x27;\\\\.\\pipe\\crashpad_7936_MNORQHLPJEEDBNSU&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COLORTERM</td>
          <td class="code"><pre>&#x27;truecolor&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMMONPROGRAMFILES</td>
          <td class="code"><pre>&#x27;C:\\Program Files\\Common Files&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMMONPROGRAMFILES(X86)</td>
          <td class="code"><pre>&#x27;C:\\Program Files (x86)\\Common Files&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMMONPROGRAMW6432</td>
          <td class="code"><pre>&#x27;C:\\Program Files\\Common Files&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMPUTERNAME</td>
          <td class="code"><pre>&#x27;DESKTOP-E757SFI&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>COMSPEC</td>
          <td class="code"><pre>&#x27;C:\\WINDOWS\\system32\\cmd.exe&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#x27;316&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#x27;application/json&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DJANGO_SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;dealzup_api.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DRIVERDATA</td>
          <td class="code"><pre>&#x27;C:\\Windows\\System32\\Drivers\\DriverData&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EFC_12320</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#x27;CGI/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>GIT_ASKPASS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOMEDRIVE</td>
          <td class="code"><pre>&#x27;C:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HOMEPATH</td>
          <td class="code"><pre>&#x27;\\Users\\Smit&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#x27;*/*&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_ENCODING</td>
          <td class="code"><pre>&#x27;gzip, deflate, br, zstd&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT_LANGUAGE</td>
          <td class="code"><pre>&#x27;en-US,en;q=0.9&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#x27;keep-alive&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#x27;127.0.0.1:8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ORIGIN</td>
          <td class="code"><pre>&#x27;http://localhost:3000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_REFERER</td>
          <td class="code"><pre>&#x27;http://localhost:3000/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA</td>
          <td class="code"><pre>&#x27;&quot;Google Chrome&quot;;v=&quot;131&quot;, &quot;Chromium&quot;;v=&quot;131&quot;, &quot;Not_A Brand&quot;;v=&quot;24&quot;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA_MOBILE</td>
          <td class="code"><pre>&#x27;?1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_CH_UA_PLATFORM</td>
          <td class="code"><pre>&#x27;&quot;Android&quot;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_DEST</td>
          <td class="code"><pre>&#x27;empty&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_MODE</td>
          <td class="code"><pre>&#x27;cors&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_SEC_FETCH_SITE</td>
          <td class="code"><pre>&#x27;cross-site&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>(&#x27;Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 &#x27;
 &#x27;(KHTML, like Gecko) Chrome/131.0.0.0 Mobile Safari/537.36&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>JAVA_HOME</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local\\jdk-11.0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#x27;en_US.UTF-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALAPPDATA</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGONSERVER</td>
          <td class="code"><pre>&#x27;\\\\DESKTOP-E757SFI&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_OF_PROCESSORS</td>
          <td class="code"><pre>&#x27;8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_HOME</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Roaming\\nvm&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NVM_SYMLINK</td>
          <td class="code"><pre>&#x27;C:\\Program Files\\nodejs&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ONEDRIVE</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\OneDrive&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OPENSSL_CONF</td>
          <td class="code"><pre>&#x27;C:\\Program Files\\OpenSSL-Win64\\bin\\openssl.cfg&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>ORIGINAL_XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#x27;undefined&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>OS</td>
          <td class="code"><pre>&#x27;Windows_NT&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH</td>
          <td class="code"><pre>(&#x27;c:\\Users\\Smit\\.vscode\\extensions\\ms-python.python-2024.20.0-win32-x64\\python_files\\deactivate\\powershell;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\env\\Scripts;c:\\Users\\Smit\\.vscode\\extensions\\ms-python.python-2024.20.0-win32-x64\\python_files\\deactivate\\powershell;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\env\\Scripts;C:\\Program &#x27;
 &#x27;Files\\OpenLogic\\jdk-17.0.13.11-hotspot\\bin;C:\\Program Files\\Common &#x27;
 &#x27;Files\\Oracle\\Java\\javapath;C:\\Program &#x27;
 &#x27;Files\\Microsoft\\jdk-11.0.22.7-hotspot\\bin;C:\\Program &#x27;
 &#x27;Files\\Microsoft\\jdk-17.0.10.7-hotspot\\bin;C:\\Python312\\Scripts\\;C:\\Python312\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\ProgramData\\chocolatey\\bin;C:\\Program &#x27;
 &#x27;Files\\Microsoft\\jdk-11.0.22.7-hotspot\\\\bin\\;C:\\Program &#x27;
 &#x27;Files\\Git\\cmd;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk\\platform-tools\\;C:\\Users\\Smit\\AppData\\Roaming\\nvm;C:\\Program &#x27;
 &#x27;Files\\nodejs;C:\\Python312\\Scripts;C:\\Program Files\\MySQL\\MySQL Shell &#x27;
 &#x27;8.0\\bin\\;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk\\tools;C:\\Users\\Smit\\AppData\\Local\\jdk-11.0.2\\bin;C:\\Users\\Smit\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Smit\\AppData\\Local\\Programs\\Microsoft &#x27;
 &#x27;VS &#x27;
 &#x27;Code\\bin;C:\\Users\\Smit\\AppData\\Local\\Android\\Sdk\\platform-tools\\;C:\\Users\\Smit\\AppData\\Roaming\\npm;C:\\Users\\Smit\\AppData\\Roaming\\nvm;C:\\Program &#x27;
 &#x27;Files\\nodejs;C:\\Program &#x27;
 &#x27;Files\\OpenSSL-Win64\\bin;C:\\Users\\Smit\\AppData\\Roaming\\npm;C:\\Users\\Smit\\AppData\\Local\\Programs\\Ollama;C:\\Program &#x27;
 &#x27;Files\\PostgreSQL\\17\\bin;C:\\Program Files\\PostgreSQL\\17\\lib;&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>PATHEXT</td>
          <td class="code"><pre>&#x27;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#x27;/auth/vendors-registration/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROCESSOR_ARCHITECTURE</td>
          <td class="code"><pre>&#x27;AMD64&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROCESSOR_IDENTIFIER</td>
          <td class="code"><pre>&#x27;AMD64 Family 23 Model 24 Stepping 1, AuthenticAMD&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROCESSOR_LEVEL</td>
          <td class="code"><pre>&#x27;23&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROCESSOR_REVISION</td>
          <td class="code"><pre>&#x27;1801&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROGRAMDATA</td>
          <td class="code"><pre>&#x27;C:\\ProgramData&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROGRAMFILES</td>
          <td class="code"><pre>&#x27;C:\\Program Files&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROGRAMFILES(X86)</td>
          <td class="code"><pre>&#x27;C:\\Program Files (x86)&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PROGRAMW6432</td>
          <td class="code"><pre>&#x27;C:\\Program Files&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PSMODULEPATH</td>
          <td class="code"><pre>(&#x27;C:\\Users\\Smit\\Documents\\WindowsPowerShell\\Modules;C:\\Program &#x27;
 &#x27;Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules&#x27;)</pre></td>
        </tr>
      
        <tr>
          <td>PUBLIC</td>
          <td class="code"><pre>&#x27;C:\\Users\\Public&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#x27;127.0.0.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_HOST</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#x27;POST&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RTOOLS40_HOME</td>
          <td class="code"><pre>&#x27;C:\\rtools40&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#x27;true&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#x27;DESKTOP-E757SFI&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#x27;8000&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#x27;HTTP/1.1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#x27;WSGIServer/0.2&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSIONNAME</td>
          <td class="code"><pre>&#x27;Console&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMDRIVE</td>
          <td class="code"><pre>&#x27;C:&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SYSTEMROOT</td>
          <td class="code"><pre>&#x27;C:\\WINDOWS&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TEMP</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local\\Temp&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM</td>
          <td class="code"><pre>&#x27;vscode&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TERM_PROGRAM_VERSION</td>
          <td class="code"><pre>&#x27;1.96.0&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TMP</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\AppData\\Local\\Temp&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERDOMAIN</td>
          <td class="code"><pre>&#x27;DESKTOP-E757SFI&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERDOMAIN_ROAMINGPROFILE</td>
          <td class="code"><pre>&#x27;DESKTOP-E757SFI&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERNAME</td>
          <td class="code"><pre>&#x27;Smit&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USERPROFILE</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VBOX_MSI_INSTALL_PATH</td>
          <td class="code"><pre>&#x27;C:\\Program Files\\Oracle\\VirtualBox\\&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\env&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VIRTUAL_ENV_PROMPT</td>
          <td class="code"><pre>&#x27;env&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_EXTRA_ARGS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_MAIN</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_ASKPASS_NODE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_GIT_IPC_HANDLE</td>
          <td class="code"><pre>&#x27;\\\\.\\pipe\\vscode-git-8c6ed5a0e4-sock&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>VSCODE_INJECTION</td>
          <td class="code"><pre>&#x27;1&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>WINDIR</td>
          <td class="code"><pre>&#x27;C:\\WINDOWS&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;_io.TextIOWrapper name=&#x27;&lt;stderr&gt;&#x27; mode=&#x27;w&#x27; encoding=&#x27;utf-8&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&lt;class &#x27;wsgiref.util.FileWrapper&#x27;&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;django.core.handlers.wsgi.LimitedStream object at 0x0000023B00AEFFA0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#x27;http&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>dealzup_api.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#x27;*&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#x27;django.contrib.auth.backends.ModelBackend&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#x27;dealzup_auth.AppUser&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\dealzup-api&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.locmem.LocMemCache&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>CORS_ORIGIN_ALLOW_ALL</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_MASKED</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;csrftoken&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#x27;django.views.csrf.csrf_failure&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#x27;HTTP_X_CSRFTOKEN&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_USE_SESSIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;ATOMIC_REQUESTS&#x27;: False,
             &#x27;AUTOCOMMIT&#x27;: True,
             &#x27;CONN_HEALTH_CHECKS&#x27;: False,
             &#x27;CONN_MAX_AGE&#x27;: 0,
             &#x27;ENGINE&#x27;: &#x27;django.db.backends.postgresql&#x27;,
             &#x27;HOST&#x27;: &#x27;localhost&#x27;,
             &#x27;NAME&#x27;: &#x27;dealzup_dev_db&#x27;,
             &#x27;OPTIONS&#x27;: {},
             &#x27;PASSWORD&#x27;: &#x27;********************&#x27;,
             &#x27;PORT&#x27;: &#x27;&#x27;,
             &#x27;TEST&#x27;: {&#x27;CHARSET&#x27;: None,
                      &#x27;COLLATION&#x27;: None,
                      &#x27;MIGRATE&#x27;: True,
                      &#x27;MIRROR&#x27;: None,
                      &#x27;NAME&#x27;: None},
             &#x27;TIME_ZONE&#x27;: None,
             &#x27;USER&#x27;: &#x27;postgres&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>
          <td class="code"><pre>1000</pre></td>
        </tr>
      
        <tr>
          <td>DATA_UPLOAD_MAX_NUMBER_FILES</td>
          <td class="code"><pre>100</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y, P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d %H:%M:%S&#x27;,
 &#x27;%Y-%m-%d %H:%M:%S.%f&#x27;,
 &#x27;%Y-%m-%d %H:%M&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S&#x27;,
 &#x27;%m/%d/%Y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%Y %H:%M&#x27;,
 &#x27;%m/%d/%y %H:%M:%S&#x27;,
 &#x27;%m/%d/%y %H:%M:%S.%f&#x27;,
 &#x27;%m/%d/%y %H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#x27;N j, Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%Y-%m-%d&#x27;,
 &#x27;%m/%d/%Y&#x27;,
 &#x27;%m/%d/%y&#x27;,
 &#x27;%b %d %Y&#x27;,
 &#x27;%b %d, %Y&#x27;,
 &#x27;%d %b %Y&#x27;,
 &#x27;%d %b, %Y&#x27;,
 &#x27;%B %d %Y&#x27;,
 &#x27;%B %d, %Y&#x27;,
 &#x27;%d %B %Y&#x27;,
 &#x27;%d %B, %Y&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#x27;.&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_AUTO_FIELD</td>
          <td class="code"><pre>&#x27;django.db.models.AutoField&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#x27;utf-8&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER</td>
          <td class="code"><pre>&#x27;django.views.debug.ExceptionReporter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#x27;django.views.debug.SafeExceptionReporterFilter&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#x27;django.core.files.storage.FileSystemStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#x27;webmaster@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.mail.backends.smtp.EmailBackend&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#x27;localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#x27;&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#x27;[Django] &#x27;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_LOCALTIME</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#x27;django.core.files.uploadhandler.MemoryFileUploadHandler&#x27;,
 &#x27;django.core.files.uploadhandler.TemporaryFileUploadHandler&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>420</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>FORM_RENDERER</td>
          <td class="code"><pre>&#x27;django.forms.renderers.DjangoTemplates&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#x27;django.contrib.admin&#x27;,
 &#x27;django.contrib.auth&#x27;,
 &#x27;django.contrib.contenttypes&#x27;,
 &#x27;django.contrib.sessions&#x27;,
 &#x27;django.contrib.messages&#x27;,
 &#x27;django.contrib.staticfiles&#x27;,
 &#x27;django_extensions&#x27;,
 &#x27;base.apps.BaseConfig&#x27;,
 &#x27;dealzup_auth.apps.DealzupAuthConfig&#x27;,
 &#x27;deals.apps.DealsConfig&#x27;,
 &#x27;wallet.apps.WalletConfig&#x27;,
 &#x27;rest_framework&#x27;,
 &#x27;rest_framework_simplejwt.token_blacklist&#x27;,
 &#x27;corsheaders&#x27;,
 &#x27;django_filters&#x27;,
 &#x27;import_export&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#x27;af&#x27;, &#x27;Afrikaans&#x27;),
 (&#x27;ar&#x27;, &#x27;Arabic&#x27;),
 (&#x27;ar-dz&#x27;, &#x27;Algerian Arabic&#x27;),
 (&#x27;ast&#x27;, &#x27;Asturian&#x27;),
 (&#x27;az&#x27;, &#x27;Azerbaijani&#x27;),
 (&#x27;bg&#x27;, &#x27;Bulgarian&#x27;),
 (&#x27;be&#x27;, &#x27;Belarusian&#x27;),
 (&#x27;bn&#x27;, &#x27;Bengali&#x27;),
 (&#x27;br&#x27;, &#x27;Breton&#x27;),
 (&#x27;bs&#x27;, &#x27;Bosnian&#x27;),
 (&#x27;ca&#x27;, &#x27;Catalan&#x27;),
 (&#x27;ckb&#x27;, &#x27;Central Kurdish (Sorani)&#x27;),
 (&#x27;cs&#x27;, &#x27;Czech&#x27;),
 (&#x27;cy&#x27;, &#x27;Welsh&#x27;),
 (&#x27;da&#x27;, &#x27;Danish&#x27;),
 (&#x27;de&#x27;, &#x27;German&#x27;),
 (&#x27;dsb&#x27;, &#x27;Lower Sorbian&#x27;),
 (&#x27;el&#x27;, &#x27;Greek&#x27;),
 (&#x27;en&#x27;, &#x27;English&#x27;),
 (&#x27;en-au&#x27;, &#x27;Australian English&#x27;),
 (&#x27;en-gb&#x27;, &#x27;British English&#x27;),
 (&#x27;eo&#x27;, &#x27;Esperanto&#x27;),
 (&#x27;es&#x27;, &#x27;Spanish&#x27;),
 (&#x27;es-ar&#x27;, &#x27;Argentinian Spanish&#x27;),
 (&#x27;es-co&#x27;, &#x27;Colombian Spanish&#x27;),
 (&#x27;es-mx&#x27;, &#x27;Mexican Spanish&#x27;),
 (&#x27;es-ni&#x27;, &#x27;Nicaraguan Spanish&#x27;),
 (&#x27;es-ve&#x27;, &#x27;Venezuelan Spanish&#x27;),
 (&#x27;et&#x27;, &#x27;Estonian&#x27;),
 (&#x27;eu&#x27;, &#x27;Basque&#x27;),
 (&#x27;fa&#x27;, &#x27;Persian&#x27;),
 (&#x27;fi&#x27;, &#x27;Finnish&#x27;),
 (&#x27;fr&#x27;, &#x27;French&#x27;),
 (&#x27;fy&#x27;, &#x27;Frisian&#x27;),
 (&#x27;ga&#x27;, &#x27;Irish&#x27;),
 (&#x27;gd&#x27;, &#x27;Scottish Gaelic&#x27;),
 (&#x27;gl&#x27;, &#x27;Galician&#x27;),
 (&#x27;he&#x27;, &#x27;Hebrew&#x27;),
 (&#x27;hi&#x27;, &#x27;Hindi&#x27;),
 (&#x27;hr&#x27;, &#x27;Croatian&#x27;),
 (&#x27;hsb&#x27;, &#x27;Upper Sorbian&#x27;),
 (&#x27;hu&#x27;, &#x27;Hungarian&#x27;),
 (&#x27;hy&#x27;, &#x27;Armenian&#x27;),
 (&#x27;ia&#x27;, &#x27;Interlingua&#x27;),
 (&#x27;id&#x27;, &#x27;Indonesian&#x27;),
 (&#x27;ig&#x27;, &#x27;Igbo&#x27;),
 (&#x27;io&#x27;, &#x27;Ido&#x27;),
 (&#x27;is&#x27;, &#x27;Icelandic&#x27;),
 (&#x27;it&#x27;, &#x27;Italian&#x27;),
 (&#x27;ja&#x27;, &#x27;Japanese&#x27;),
 (&#x27;ka&#x27;, &#x27;Georgian&#x27;),
 (&#x27;kab&#x27;, &#x27;Kabyle&#x27;),
 (&#x27;kk&#x27;, &#x27;Kazakh&#x27;),
 (&#x27;km&#x27;, &#x27;Khmer&#x27;),
 (&#x27;kn&#x27;, &#x27;Kannada&#x27;),
 (&#x27;ko&#x27;, &#x27;Korean&#x27;),
 (&#x27;ky&#x27;, &#x27;Kyrgyz&#x27;),
 (&#x27;lb&#x27;, &#x27;Luxembourgish&#x27;),
 (&#x27;lt&#x27;, &#x27;Lithuanian&#x27;),
 (&#x27;lv&#x27;, &#x27;Latvian&#x27;),
 (&#x27;mk&#x27;, &#x27;Macedonian&#x27;),
 (&#x27;ml&#x27;, &#x27;Malayalam&#x27;),
 (&#x27;mn&#x27;, &#x27;Mongolian&#x27;),
 (&#x27;mr&#x27;, &#x27;Marathi&#x27;),
 (&#x27;ms&#x27;, &#x27;Malay&#x27;),
 (&#x27;my&#x27;, &#x27;Burmese&#x27;),
 (&#x27;nb&#x27;, &#x27;Norwegian BokmÃ¥l&#x27;),
 (&#x27;ne&#x27;, &#x27;Nepali&#x27;),
 (&#x27;nl&#x27;, &#x27;Dutch&#x27;),
 (&#x27;nn&#x27;, &#x27;Norwegian Nynorsk&#x27;),
 (&#x27;os&#x27;, &#x27;Ossetic&#x27;),
 (&#x27;pa&#x27;, &#x27;Punjabi&#x27;),
 (&#x27;pl&#x27;, &#x27;Polish&#x27;),
 (&#x27;pt&#x27;, &#x27;Portuguese&#x27;),
 (&#x27;pt-br&#x27;, &#x27;Brazilian Portuguese&#x27;),
 (&#x27;ro&#x27;, &#x27;Romanian&#x27;),
 (&#x27;ru&#x27;, &#x27;Russian&#x27;),
 (&#x27;sk&#x27;, &#x27;Slovak&#x27;),
 (&#x27;sl&#x27;, &#x27;Slovenian&#x27;),
 (&#x27;sq&#x27;, &#x27;Albanian&#x27;),
 (&#x27;sr&#x27;, &#x27;Serbian&#x27;),
 (&#x27;sr-latn&#x27;, &#x27;Serbian Latin&#x27;),
 (&#x27;sv&#x27;, &#x27;Swedish&#x27;),
 (&#x27;sw&#x27;, &#x27;Swahili&#x27;),
 (&#x27;ta&#x27;, &#x27;Tamil&#x27;),
 (&#x27;te&#x27;, &#x27;Telugu&#x27;),
 (&#x27;tg&#x27;, &#x27;Tajik&#x27;),
 (&#x27;th&#x27;, &#x27;Thai&#x27;),
 (&#x27;tk&#x27;, &#x27;Turkmen&#x27;),
 (&#x27;tr&#x27;, &#x27;Turkish&#x27;),
 (&#x27;tt&#x27;, &#x27;Tatar&#x27;),
 (&#x27;udm&#x27;, &#x27;Udmurt&#x27;),
 (&#x27;uk&#x27;, &#x27;Ukrainian&#x27;),
 (&#x27;ur&#x27;, &#x27;Urdu&#x27;),
 (&#x27;uz&#x27;, &#x27;Uzbek&#x27;),
 (&#x27;vi&#x27;, &#x27;Vietnamese&#x27;),
 (&#x27;zh-hans&#x27;, &#x27;Simplified Chinese&#x27;),
 (&#x27;zh-hant&#x27;, &#x27;Traditional Chinese&#x27;)]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#x27;he&#x27;, &#x27;ar&#x27;, &#x27;ar-dz&#x27;, &#x27;ckb&#x27;, &#x27;fa&#x27;, &#x27;ur&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#x27;en-us&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;django_language&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SAMESITE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#x27;logging.config.dictConfig&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#x27;/accounts/profile/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#x27;/accounts/login/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_REDIRECT_URL</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_PATH</td>
          <td class="code"><pre>&#x27;media/%Y/%m/%d/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\dealzup-api\\media/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#x27;/media/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.messages.storage.fallback.FallbackStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE</td>
          <td class="code"><pre>[&#x27;django.middleware.security.SecurityMiddleware&#x27;,
 &#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;,
 &#x27;django.middleware.common.CommonMiddleware&#x27;,
 &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,
 &#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;,
 &#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;,
 &#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;,
 &#x27;corsheaders.middleware.CorsMiddleware&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#x27;F j&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#x27;DEFAULT_AUTHENTICATION_CLASSES&#x27;: [&#x27;rest_framework_simplejwt.authentication.JWTAuthentication&#x27;,
                                    &#x27;rest_framework.authentication.SessionAuthentication&#x27;],
 &#x27;EXCEPTION_HANDLER&#x27;: &#x27;dealzup_api.base_exceptions.custom_exception_handler&#x27;,
 &#x27;ORDERING_PARAM&#x27;: &#x27;o&#x27;,
 &#x27;SEARCH_PARAM&#x27;: &#x27;q&#x27;}</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#x27;dealzup_api.urls&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY_FALLBACKS</td>
          <td class="code"><pre>&#x27;********************&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CROSS_ORIGIN_OPENER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_PRELOAD</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REFERRER_POLICY</td>
          <td class="code"><pre>&#x27;same-origin&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#x27;root@localhost&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#x27;default&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#x27;sessionid&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#x27;/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SAMESITE</td>
          <td class="code"><pre>&#x27;Lax&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.backends.db&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#x27;django.contrib.sessions.serializers.JSONSerializer&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#x27;dealzup_api.settings&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#x27;m/d/Y&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#x27;django.core.signing.TimestampSigner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#x27;django.contrib.staticfiles.finders.FileSystemFinder&#x27;,
 &#x27;django.contrib.staticfiles.finders.AppDirectoriesFinder&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#x27;C:\\Users\\Smit\\Desktop\\Projects\\DealzUp\\Backend\\dealzup-api\\static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#x27;/static/&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>STORAGES</td>
          <td class="code"><pre>{&#x27;default&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.core.files.storage.FileSystemStorage&#x27;},
 &#x27;staticfiles&#x27;: {&#x27;BACKEND&#x27;: &#x27;django.contrib.staticfiles.storage.StaticFilesStorage&#x27;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#x27;APP_DIRS&#x27;: True,
  &#x27;BACKEND&#x27;: &#x27;django.template.backends.django.DjangoTemplates&#x27;,
  &#x27;DIRS&#x27;: [],
  &#x27;OPTIONS&#x27;: {&#x27;context_processors&#x27;: [&#x27;django.template.context_processors.debug&#x27;,
                                     &#x27;django.template.context_processors.request&#x27;,
                                     &#x27;django.contrib.auth.context_processors.auth&#x27;,
                                     &#x27;django.contrib.messages.context_processors.messages&#x27;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#x27;django.test.runner.DiscoverRunner&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#x27;,&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#x27;P&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#x27;%H:%M:%S&#x27;, &#x27;%H:%M:%S.%f&#x27;, &#x27;%H:%M&#x27;]</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#x27;UTC&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>USE_DEPRECATED_PYTZ</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#x27;dealzup_api.wsgi.application&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#x27;DENY&#x27;</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#x27;F Y&#x27;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      Youâ€™re seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>
